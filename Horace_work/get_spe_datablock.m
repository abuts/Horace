function data = get_spe_datablock (fid, data_in)
%  Read in the .spe bock in the binary file generated by gen_hkle, or to read
% the grid data generated 
%  It assumes that the file is already opened for reading with fid the
% assiciated file pointer.
%
% output:
%   if data is in spe blocks
%   data.ei: incident energy used for spe file
%   data.psi: psi angle
%   data.cu: u crystal axis (see mslice)
%   data.cv: v crystal axis (see mslice)
%   data.file: file name
%   data.size: size(1)=number of detectors; size(2)=number of energy bins
%   data.v: array containing the values along u1, u2, u3
%   data.en: vector containing the energy bins
%   data.S: Intensity vector
%   data.ERR: error vector
%
%   if data is in grid:
%   Data structure containing the data contained in the binary grid file.
%   data.np1 = length(data.p1)  : number of grid boundaries along p1
%   data.np2 = length(data.p2)  : number of grid boundaries along p2
%       :    (for as many plot axes as given by length of dhead.pax
%   data.p1                : grid boundaries along p1
%   data.p2                : grid boundaries along p2
%        :
%   data.s(length(data.p1)-1,length(data.p2)-1,length(data.p3)-1,length(data.p4)-1) float32
%   data.e(length(data.p1)-1,length(data.p2)-1,length(data.p3)-1,length(data.p4)-1) float32
%   data.n(length(data.p1)-1,length(data.p2)-1,length(data.p3)-1,length(dat
%   a.p4)-1) int16 if 4D grid double for anything lower.

% Original author: J. van Duijn
%
% $Revision$ ($Date$)
%
% Horace v0.1   J. van Duijn, T.G.Perring

if isstruct(data_in)
    data = data_in;
else
    error ('ERROR: Check the type of input argument data_in')
end

[data.ei,count]= fread(fid, 1, 'float32');
[data.psi,count]= fread(fid, 1, 'float32');
[data.cu,count]= fread(fid, 3, 'float32');
data.cu= data.cu';
[data.cv,count]= fread(fid, 3, 'float32');
data.cv=data.cv';
[n,count]=fread(fid, 1, 'int32');
[data.file,count]=fread(fid, n, '*char');
data.file=data.file';
[data.size,count]= fread(fid,2,'int32');
sizet= data.size(1)*data.size(2);
[data.v,count]= fread(fid,[3,sizet], 'float32');
%data.v=reshape(data.v, sizet,3);
% data.v=data.v';
[data.en,count]= fread(fid,[1,data.size(2)],'float32');
[data.S,count]= fread(fid,[1,sizet],'float32');
[data.ERR,count]= fread(fid,[1,sizet],'float32');

