function data = readgrid (binfil)
% Read data from binary file containing one, two, three or four dimensional dataset.
%
% Syntax:
%   >> data = readgrid (binfil)
%
% Input:
% -------
%   binfil  Binary grid file, of the type generated by slice_4d or slice_3d
%
% Output:
% -------
%   data    Dataset containng the data read fromt he file
%

% Original author: J. van Duijn
%
% $Revision$ ($Date$)
%
% Horace v0.1   J. van Duijn, T.G.Perring

if nargin>0
    if isa_size(binfil,'row','char')
        if (exist(binfil,'file')==2)
            file_internal = binfil;
        else
            file_internal = genie_getfile(binfil);
        end
    else
        file_internal = genie_getfile;
    end
else
    file_internal = genie_getfile;
end
if (isempty(file_internal))
    error ('No file given')
end

% Open binary file:
fid = fopen(file_internal,'r');
if fid<0
    error (['ERROR: Unable to open file ',file_internal])
end
disp('Reading binary file ...');

% Read header information
data.file = file_internal;
[data, mess] = get_header(fid, data);
if ~isempty(mess); fclose(fid); error(mess); end

if isfield(data,'grid')
    if ~strcmp(data.grid,'orthogonal-grid')
        fclose(fid);
        error ('ERROR: The function readgrid only reads orthogonal grid data ');
    end
else
    fclose(fid);
    error (['ERROR: Problems reading orthogonal grid header data from ',file_internal])
end

% Read grid information and the data
ndim = length(data.pax);
[data, mess] = get_grid_data(fid, ndim, data);
if ~isempty(mess); fclose(fid); error(mess); end

fclose(fid);

% Create class from structure
data = dnd_create(data);
