function data=getheader(fid)

% this function obtains the header information contained in the binary file
% generated by gen_hkle.m and contains the following information
%
%       data.grid: type of binary file, block spe or 4D grid
%       data.title: title label
%       data.a: a axis
%       data.b: b axis
%       data.c: c axis
%       data.alpha: alpha
%       data.beta: beta
%       data.gamma: gamma
%       data.grid: type of binary file (4D grid, blocks of spe file, etc)
%       data.title_label: title label
%       data.efixed: value of ei
%       data.a: a axis
%       data.b: b axis
%       data.c c axis
%       data.alpha: alpha
%       data.beta: beta
%       data.gamma: gamma
%       data.u     Matrix (4x4) of projection axes in original 4D representation
%              u(:,1) first vector - u(1:3,1) r.l.u., u(4,1) energy etc.
%       din.ulen  Length of vectors in Ang^-1, energy
%       data.nfiles: number of spe files contained within the binary file
%   if data is in grid:
%       data.label: Labels of theprojection axes (1x4 cell array of charater
%       strings)
%       din.p0    Offset of origin of projection [ph; pk; pl; pen]
%       din.pax   Index of plot axes in the matrix din.u
%               e.g. if data is 3D, din.pax=[2,4,1] means u2, u4, u1 axes are x,y,z in any plotting
%                               2D, din.pax=[2,4]     "   u2, u4,    axes
%                               are x,y   in any plotting
% 
% This function also assumes that the file has already been opened for
% reading and that fid is the corresponding file identifier.

% Author:
%   J. van Duijn     01/06/2005
% Modified:
%
% Horace v0.1   J.Van Duijn, T.G.Perring

disp('Reading header information ...');
[n,count]= fread(fid,1,'int32');
[data.grid,count]= fread(fid,[1,n],'*char');
[n,count]= fread(fid,1,'int32');
[data.title,count]= fread(fid,n,'*char');
data.title= data.title';
[data.a,count] = fread(fid,1,'float32');
[data.b,count] = fread(fid,1,'float32');
[data.c,count] = fread(fid,1,'float32');
[data.alpha,count] = fread(fid,1,'float32');
[data.beta,count] = fread(fid,1,'float32');
[data.gamma,count] = fread(fid,1,'float32');
[data.u,count] = fread(fid,[4,4],'float32');
[data.ulen,count] = fread(fid,[1,4],'float32');
if strcmp(data.grid,'spe'),
    [data.nfiles,count] = fread(fid,1,'int32');
    % we don't yet know what p0 and pax will be. Data needs to be sliced
    % first.
else
    [n,count]= fread(fid,2,'int32');
    [data.label,count]=fread(fid,[n(1),n(2)],'*char');
    data.label=cellstr(data.label);
    data.label=data.label';
    [data.p0,count]= fread(fid,[4,1],'int32');
    [n,count]= fread(fid,1,'int32');
    [data.pax,count]=fread(fid,[1,n],'int32');
    if n==4,
        data.iax=[]; % create empty index of integration array
        data.uint=[];
    else
        [n,count]= fread(fid,1,'int32');
        [data.iax,count]=fread(fid,[1,n],'int32');
        [data.uint,count]=fread(fid,[2,n],'float32');
    end
end