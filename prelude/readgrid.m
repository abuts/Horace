function data=readgrid(binfil)

% Input: 
%   binfil is a binary grid file, of the type generated by grid_hkle.m, and
%   contains data with the following content:
%       nhv = length(hv)  : number of grid boundaries along Q_h
%       nkv = length(kv)  : number of grid boundaries along Q_k
%       nlv = length(lv)  : number of grid boundaries along Q_l
%       nev = length(ev)  : number of grid boundaries along E
%       hv                : grid boundaries along Q_h
%       kv                : grid boundaries along Q_k
%       lv                : grid boundaries along Q_l
%       ev                : grid boundaries along E
%       rint(length(hv),length(kv),length(lv),length(ev)) float32
%       eint(length(hv),length(kv),length(lv),length(ev)) float32
%       nint(length(hv),length(kv),length(lv),length(ev)) int16
%
%       rint is the cumulative intensity in the grid defined by the bin boundaries 
%       in hv,kv,lv,ev.
%       eint is the cumulative variance in the grid defined by the bin boundaries 
%       in hv,kv,lv,ev.
%       Number of pixels that contributed to a grid point is given by nint
%
%
% Output:
%   Data structure containing the data contained in the binary grid file.
%       data.nhv = length(data.hv)  : number of grid boundaries along Q_h
%       data.nkv = length(data.kv)  : number of grid boundaries along Q_k
%       data.nlv = length(data.lv)  : number of grid boundaries along Q_l
%       data.nev = length(data.ev)  : number of grid boundaries along E
%       data.hv                : grid boundaries along Q_h
%       data.kv                : grid boundaries along Q_k
%       data.lv                : grid boundaries along Q_l
%       data.ev                : grid boundaries along E
%       data.rint(length(data.hv),length(data.kv),length(data.lv),length(data.ev)) float32
%       data.eint(length(data.hv),length(data.kv),length(data.lv),length(data.ev)) float32
%       data.nint(length(data.hv),length(data.kv),length(data.lv),length(data.ev)) int16

disp('Reading binary file ...')
fid = fopen(binfil,'r');
[data.nhv,count] = fread(fid,1,'float32');
[data.nkv,count] = fread(fid,1,'float32');
[data.nlv,count] = fread(fid,1,'float32');
[data.nev,count] = fread(fid,1,'float32');
[data.hv,count] = fread(fid,data.nhv,'float32');
[data.kv,count] = fread(fid,data.nkv,'float32');
[data.lv,count] = fread(fid,data.nlv,'float32');
[data.ev,count] = fread(fid,data.nev,'float32');
data.ntot = data.nhv*data.nkv*data.nlv*data.nev;
data.rint = zeros(data.nhv,data.nkv,data.nlv,data.nev);
data.eint = zeros(data.nhv,data.nkv,data.nlv,data.nev);
data.nint = int16(data.rint);
[data.rint,count] = fread(fid,data.ntot,'float32');
data.rint = reshape(data.rint,data.nhv,data.nkv,data.nlv,data.nev);
[data.eint,count] = fread(fid,data.ntot,'float32');
data.eint = reshape(data.eint,data.nhv,data.nkv,data.nlv,data.nev);
[data.nint,count] = fread(fid,data.ntot,'int16');
data.nint = reshape(data.nint,data.nhv,data.nkv,data.nlv,data.nev);
fclose(fid);

