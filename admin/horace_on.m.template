function path=horace4_on(non_default_hor_path,non_default_her_path)
%  safely switches Horace on
%  horace_on()                         -- initializes Horace with default settings
%  horace_on(non_default_horace_path)  -- initializes Horace with non-default Horace folder;
%  horace_on(non_default_horace_path,non_default_her_path)
%                                      -- initializes Horace with non-default Horace folder
%                                         and non-default Herbert folder,
%                                         not located within non-default
%                                         Horace folder (for old versions
%                                         of Horace/Herbert pairs)
%
%
default_horace_path  = '/usr/local/mprogs/Horace/';

% To use spinW together with Horace, modify the row below pointing to correct
% spinW location. Also need to modify spinw_on template and place it together
% with horace_on.m script.
default_spinw_path = '/usr/local/mprogs/spinW';
%
if exist('non_default_hor_path','var') && ~isempty(non_default_hor_path)
    if (strcmpi(non_default_hor_path,'where') || strcmpi(non_default_hor_path,'which'))
        path = find_default_hor_path(default_horace_path);
        return;
    else
        horace_path  = non_default_hor_path;
    end
else
    horace_path = default_horace_path;
end
root_path = find_root_path(horace_path);
if isempty(root_path)
    error('HORACE:horace_on:invalid_argument', ...
        'Can not find horace init on path %s or %s/horace_core', ...
        horace_path,horace_path);
end
horace_path = fullfile(root_path,'horace_core');

warn_state=warning('off','all');    % turn of warnings (so don't get errors if remove non-existent paths)
% Temporary inefficient code, needed only during transition from Horace v3 to Horace V4 on iDAAAS until its config not changed
try
    herbert_off();
catch
end
% End temporary code
try
    horace_off();
catch
end
warning(warn_state);    % return warnings to initial state

% if spinW start up file exist, try to initialize it
sw_start = which('spinw_on.m');
ws = warning('off','MATLAB:rmpath:DirNotFound');
if ~isempty(sw_start)
    spinw_on(default_spinw_path);
end
warning(ws);

if nargin > 1
    independent_herbert = true;
else
    independent_herbert = false;
end
herbert_initated=~isempty(which('herbert_init.m'));
% if Herbert is not initiated, try to init it.
if ~herbert_initated
    if independent_herbert
        herbert_path = non_default_her_path;
    else
        herbert_path = build_default_her_path(horace_path);
    end
    try
        init_herbert(herbert_path);
    catch ME
        disp('HORACE:horace_on:invalid_argument: cannot initialise Herbert');
        rethrow(ME);
    end
else % reinitialize Herbert on where it is now.
    if independent_herbert
        init_herbert(non_default_her_path);
    else
        her_path = fileparts(which('herbert_init.m'));
        init_herbert(her_path);
    end
end

% init Horace
init_horace(horace_path);

%

warning('off','MATLAB:subscripting:noSubscriptsSpecified');
end


function init_horace(path)
if ~(exist(fullfile(path,'horace_init.m'),'file') == 2)
    path = fullfile(path,'horace_core');
end
addpath(path);
horace_init;

end
%
function root_path = find_root_path(trial_path)
% identify real path to Horace package resolving simulinks
addpath(trial_path);
full_path = which('horace_init');
rmpath(trial_path);
if isempty(full_path)
    trial_path = full_path(trial_path,'horace_core');
    if exist(trial_path,'dir') == 7
        root_path = find_root_path(trial_path);
    else
        root_path = '';
    end
    return
else
    root_path = fileparts(fileparts(full_path));
end
end

function her_path = build_default_her_path(hor_path)
% build default Herbert path from knowledge that Herbert is located
% alongside the Horace
[fp,hor_folder] = fileparts(hor_path);
if strcmp(hor_folder,'horace_core')
    her_path = fullfile(fp,'herbert_core');
else
    her_path = fullfile(hor_path,'herbert_core');
end

end

function path =find_default_hor_path(hor_default_path)
path = which('horace_init.m');
if isempty(path)
    path = hor_default_path;
    if ~exist(fullfile(path,'horace_init.m'),'file')
        path='';
    end
else

end
path=fileparts(path);
end

function init_herbert(path)
% initialize Herbert directories.
if ~exist(fullfile(path,'herbert_init.m'),'file')
    path = fullfile(path,'herbert_core');
end

try
    herbert_off();
catch
end
addpath(path);
herbert_init;

end
